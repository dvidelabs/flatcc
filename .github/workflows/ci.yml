name: CI

on: [push, pull_request]

env:
  CTEST_OUTPUT_ON_FAILURE: 1

permissions:
  contents: read

jobs:
  ubuntu-ninja-clang:
    name: Ubuntu (ninja, clang)
    runs-on: ubuntu-22.04
    steps:
      - name: Prepare
        run: |
          sudo apt update
          sudo apt install ninja-build
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Build and run tests
        env:
          CC: clang
          CXX: clang++
        run: |
          scripts/test.sh

  ubuntu-make-gcc:
    name: Ubuntu (make, gcc)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Build and run tests
        env:
          CC: gcc
          CXX: g++
        run: |
          scripts/initbuild.sh make
          scripts/test.sh

  macos:
    name: macOS
    runs-on: macos-14
    steps:
      - name: Prepare
        run: |
          brew install ninja
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Build and run tests
        run: |
          scripts/test.sh

  windows:
    name: Windows
    runs-on: windows-2022
    steps:
      - uses: microsoft/setup-msbuild@6fb02220983dee41ce7ae257b6f4d8f9bf5ed4ce # v2.0.0
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Build and run tests
        run: |
          cmake .
          msbuild FlatCC.sln /m /property:Configuration=Release
          ctest -VV

  meson-build:
    name: Meson (${{matrix.os}})
    runs-on: ${{matrix.os}}
    continue-on-error: true
    strategy:
      matrix:
        os: [ ubuntu-22.04, macos-12, windows-2022 ]
    steps:
      - uses: actions/checkout@v3

      - uses: microsoft/setup-msbuild@v1.1
        if: runner.os == 'windows'
      - uses: actions/setup-python@v2
        if: runner.os == 'windows'
      - name: Prepare MSVC
        uses: bus1/cabuild/action/msdevshell@v1
        with:
          architecture: x64
        if: runner.os == 'windows'
      - name: Install dependencies (windows)
        if: runner.os == 'windows'
        run: |
          pip install meson

      - name: Install dependencies (ubuntu)
        if: runner.os == 'linux'
        run: |
          sudo apt update -y
          sudo apt install ninja-build meson

      - name: Install dependencies (macos)
        if: runner.os == 'macos'
        run: |
          brew install meson ninja

      - name: Build and run tests
        run: |
          meson setup build --buildtype release
          meson compile -C build
          meson test -C build --verbose
          meson test -C build --benchmark --verbose
